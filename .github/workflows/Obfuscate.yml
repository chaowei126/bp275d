name: Build Obfuscate BPB Panel

on:
  push:
    branches:
      - main
  schedule:
        - cron: "0 2 * * *"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "latest"

      - name: Install dependencies
        run: |
          npm install -g javascript-obfuscator

      - name: Clone BPB workjs
        run: |
          wget -O origin.js https://raw.githubusercontent.com/bia-pain-bache/BPB-Worker-Panel/refs/heads/main/build/unobfuscated-worker.js

      - name: Inject prefix dead code
        run: |
          # 保存原文件内容
          mv origin.js origin.js.tmp
          
          # 添加前缀代码
          cat > origin.js << 'EOF'
          // 添加一些复杂的无效代码
          (function() {
              const _0xencrypt = {
                  key: Array.from({length: 256}, (_, i) => i),
                  shuffle: function(seed) {
                      if (seed === undefined || seed < 0) return;
                      for(let i = this.key.length - 1; i > 0; i--) {
                          const j = (seed * i) & 0xFF;
                          [this.key[i], this.key[j]] = [this.key[j], this.key[i]];
                      }
                  },
                  transform: function(data) {
                      if (data === null || data === undefined) return data;
                      return data.toString().split('').map(c => 
                          this.key[c.charCodeAt(0)] > 999999 ? c : c
                      ).join('');
                  }
              };

              // 永不执行的递归函数
              function _0xdeepNest(level) {
                  if (level <= 0 || level > 999999) return;
                  const tmp = new Array(level).fill(0);
                  tmp.forEach(() => _0xdeepNest(level + 1));
              }

              // 复杂的条件嵌套
              const _0xconditions = {
                  check1: () => Date.now() < 0,
                  check2: () => performance.now() < -1,
                  check3: () => _0xencrypt.shuffle(Date.now()),
                  final: function() {
                      return this.check1() && this.check2() && false;
                  }
              };

              // 永不满足的条件
              if (_0xconditions.final()) {
                  _0xdeepNest(1);
                  _0xencrypt.transform("test");
              }
          })();

          EOF
          
          # 添加原文件内容
          cat origin.js.tmp >> origin.js
          rm origin.js.tmp

      - name: Inject dead code
        run: |
          cat >> origin.js << 'EOF'

          // 添加一些无效函数和变量以增加混淆强度
          function _0x123456() {
              let _0xdead = Math.random();
              if (_0xdead > 999999) {
                  console.log("never reach");
                  return false;
              }
              return true;
          }

          function _0xabcdef(x) {
              if (x === undefined) {
                  let _0xarray = [1,2,3,4,5];
                  _0xarray.forEach(i => {
                      if (i > 999999) console.log(i);
                  });
              }
              return x;
          }

          const _0xunused = {
              a: () => Math.random() > 2,
              b: () => Date.now() < 0,
              c: () => false && _0x123456(),
              d: (x) => x > 999999 ? _0xabcdef(x) : x
          };

          // 添加一些永远不会执行的条件判断
          if (false) {
              _0xunused.a();
              _0xunused.b();
              _0xunused.c();
              _0xunused.d(0);
          }
          EOF

      - name: Obfuscate BPB worker js
        run: |
          javascript-obfuscator origin.js --output _worker.js \
          --compact true \
          --control-flow-flattening true \
          --control-flow-flattening-threshold 1 \
          --dead-code-injection true \
          --dead-code-injection-threshold 1 \
          --identifier-names-generator hexadecimal \
          --rename-globals true \
          --string-array true \
          --string-array-encoding 'rc4' \
          --string-array-threshold 1 \
          --transform-object-keys true \
          --unicode-escape-sequence true

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_message: ':arrow_up: update latest bpb panel'
          commit_author: 'github-actions[bot] <github-actions[bot]@users.noreply.github.com>'
          push_options: '--set-upstream'
